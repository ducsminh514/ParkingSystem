@using ParkingSystem.Client.Services
@page "/parking-management"
@inject ParkingService ParkingService
@implements IAsyncDisposable

<div class="parking-management">
    @if (_registrations != null)
    {
        foreach (var registration in _registrations)
        {
            <div class="parking-slot">
                <h3>Slot: @registration.SlotId</h3>
                <p>Vehicle: @registration.Vehicle.PlateNumber</p>
                <p>Status: @registration.Status</p>
            </div>
        }
    }
</div>

@code {
    private List<ParkingRegistration> _registrations = new();

    protected override async Task OnInitializedAsync()
    {
        await ParkingService.StartConnection();
        
        ParkingService.OnParkingStatusUpdated += HandleParkingUpdate;
        ParkingService.OnVehicleCheckedIn += HandleVehicleCheckin;
        ParkingService.OnVehicleCheckedOut += HandleVehicleCheckout;
    }

    private void HandleParkingUpdate(ParkingRegistration registration)
    {
        var existing = _registrations.FirstOrDefault(r => r.RegistrationId == registration.RegistrationId);
        if (existing != null)
        {
            var index = _registrations.IndexOf(existing);
            _registrations[index] = registration;
        }
        else
        {
            _registrations.Add(registration);
        }
        StateHasChanged();
    }

    private void HandleVehicleCheckin(Vehicle vehicle, string slotId)
    {
        // Handle new vehicle check-in
        StateHasChanged();
    }

    private void HandleVehicleCheckout(string registrationId)
    {
        _registrations.RemoveAll(r => r.RegistrationId.ToString() == registrationId);
        StateHasChanged();
    }

    public async ValueTask DisposeAsync()
    {
        if (ParkingService is not null)
        {
            ParkingService.OnParkingStatusUpdated -= HandleParkingUpdate;
            ParkingService.OnVehicleCheckedIn -= HandleVehicleCheckin;
            ParkingService.OnVehicleCheckedOut -= HandleVehicleCheckout;
            await ParkingService.DisposeAsync();
        }
    }
}
